rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for security
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isDevAdmin() {
      return request.auth.token.email == 'luckyxstar1214@gmail.com';
    }
    
    function getUserRecord() {
      return get(/databases/$(database)/documents/users/$(request.auth.token.email));
    }
    
    function hasRole(role) {
      return isDevAdmin() || (isAuthenticated() && getUserRecord().data.role == role);
    }
    
    function hasPermission(category, action) {
      return isDevAdmin() || 
        (isAuthenticated() && 
         getUserRecord().data.isActive == true &&
         getUserRecord().data.permissions[category][action] == true);
    }
    
    function isActiveUser() {
      return isDevAdmin() || 
        (isAuthenticated() && getUserRecord().data.isActive == true);
    }

    // Users collection - DevAdmin and users can read their own record
    match /users/{email} {
      allow read: if isDevAdmin() || (isAuthenticated() && request.auth.token.email == email);
      allow write: if isDevAdmin();
      allow list: if isDevAdmin();
    }
    
    // Inventory counts - role-based access
    match /inventory_counts/{document} {
      allow read: if isActiveUser() && hasPermission('inventory', 'view');
      allow create, update: if isActiveUser() && hasPermission('inventory', 'count');
      allow delete: if isDevAdmin() || hasPermission('inventory', 'delete');
    }
    
    // Transactions - role-based access
    match /transactions/{document} {
      allow read: if isActiveUser() && hasPermission('transactions', 'view');
      allow create: if isActiveUser() && hasPermission('transactions', 'create');
      allow update: if isActiveUser() && (
        hasPermission('transactions', 'approve') || 
        hasPermission('transactions', 'cancel')
      );
      allow delete: if isDevAdmin();
    }
    
    // Transaction OTPs - sensitive, manager+ only
    match /transaction_otps/{document} {
      allow read, write: if isDevAdmin() || hasRole('manager') || hasRole('supervisor');
    }
    
    // Expected inventory - calculated data, manager+ read/write
    match /expected_inventory/{document} {
      allow read: if isActiveUser() && hasPermission('inventory', 'view');
      allow write: if isDevAdmin() || hasRole('manager');
    }
    
    // Yesterday results - historical data, manager+ read/write
    match /yesterday_results/{document} {
      allow read: if isActiveUser() && hasPermission('inventory', 'view');
      allow write: if isDevAdmin() || hasRole('manager');
    }
    
    // Item master list - role-based CRUD
    match /item_master/{document} {
      allow read: if isActiveUser() && hasPermission('itemMaster', 'view');
      allow create: if isActiveUser() && hasPermission('itemMaster', 'add');
      allow update: if isActiveUser() && hasPermission('itemMaster', 'edit');
      allow delete: if isDevAdmin() || hasPermission('itemMaster', 'delete');
    }
    
    // BOMs - role-based CRUD
    match /boms/{document} {
      allow read: if isActiveUser() && hasPermission('bom', 'view');
      allow create: if isActiveUser() && hasPermission('bom', 'create');
      allow update: if isActiveUser() && hasPermission('bom', 'edit');
      allow delete: if isDevAdmin() || hasPermission('bom', 'delete');
    }
    
    // Audit logs - read-only for authorized users, write for system
    match /audit_logs/{document} {
      allow read: if isDevAdmin() || hasPermission('system', 'auditLogs');
      allow write: if isDevAdmin();
    }
    
    // System settings - DevAdmin only
    match /system_settings/{document} {
      allow read, write: if isDevAdmin();
    }
    
    // Scanner configurations - v3.2 future feature
    match /scanner_config/{document} {
      allow read: if isActiveUser() && hasPermission('scanner', 'use');
      allow write: if isDevAdmin() || hasPermission('scanner', 'admin');
    }
    
    // Scanner lookup table - SKU to zone mapping for v3.2.0
    match /scanLookups/{document} {
      allow read: if isActiveUser();  // All authenticated users can read scan lookups
      allow write: if isDevAdmin() || hasRole('manager');  // Only managers can modify lookup table
    }
    
    // Version 4.0 Collections - Car Tracking and Production Line Management
    
    // Cars collection - Production line car tracking
    match /cars/{vin} {
      allow read: if isActiveUser();  // All authenticated users can read car data
      allow create: if isActiveUser() && (
        hasRole('production') || hasRole('logistics') || 
        hasRole('supervisor') || hasRole('manager')
      );
      allow update: if isActiveUser() && (
        hasRole('production') || hasRole('logistics') || 
        hasRole('supervisor') || hasRole('manager')
      );
      allow delete: if isDevAdmin() || hasRole('manager');
    }
    
    // Car movements - Audit trail for car movements
    match /carMovements/{document} {
      allow read: if isActiveUser();  // All users can read movement history
      allow create: if isActiveUser() && (
        hasRole('production') || hasRole('logistics') || 
        hasRole('supervisor') || hasRole('manager')
      );
      allow update, delete: if isDevAdmin() || hasRole('manager');  // Only managers can modify audit trail
    }
    
    // Work stations - Zone status and real-time info
    match /workStations/{zoneId} {
      allow read: if isActiveUser();  // All users can read station status
      allow create, update: if isActiveUser() && (
        hasRole('production') || hasRole('logistics') || 
        hasRole('supervisor') || hasRole('manager')
      );
      allow delete: if isDevAdmin();
    }
    
    // Worker activities - Clock in/out tracking
    match /workerActivities/{document} {
      allow read: if isActiveUser() && (
        // Workers can read their own activities, managers can read all
        resource.data.workerEmail == request.auth.token.email ||
        hasRole('supervisor') || hasRole('manager')
      );
      allow create: if isActiveUser() && (
        hasRole('production') || hasRole('logistics') ||
        hasRole('supervisor') || hasRole('manager')
      );
      allow update: if isActiveUser() && (
        // Workers can update their own activities, managers can update all
        resource.data.workerEmail == request.auth.token.email ||
        hasRole('supervisor') || hasRole('manager')
      );
      allow delete: if isDevAdmin() || hasRole('manager');
    }
    
    // Production statistics - Manager dashboard data
    match /productionStats/{document} {
      allow read: if isActiveUser() && (
        hasRole('supervisor') || hasRole('manager') || hasRole('viewer')
      );
      allow write: if isDevAdmin() || hasRole('manager');
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}